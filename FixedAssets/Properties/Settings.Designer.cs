//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FixedAssets.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("جاري الحفظ ...")]
        public string msg_SavingInProgress {
            get {
                return ((string)(this["msg_SavingInProgress"]));
            }
            set {
                this["msg_SavingInProgress"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("تم الحفظ ...")]
        public string msg_SaveSuccess {
            get {
                return ((string)(this["msg_SaveSuccess"]));
            }
            set {
                this["msg_SaveSuccess"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("لم يتم الحفظ ...")]
        public string msg_SavingFailed {
            get {
                return ((string)(this["msg_SavingFailed"]));
            }
            set {
                this["msg_SavingFailed"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=192.168.211.1;Initial Catalog=FixedAssets;Persist Security Info=True;" +
            "User ID=sa;Password=123456")]
        public string FixedAssetsConnectionString {
            get {
                return ((string)(this["FixedAssetsConnectionString"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<configuration>\n    <configSections>\n    " +
            "  <section name=\"log4net\"\n          type=\"log4net.Config.Log4NetConfigurationSec" +
            "tionHandler, log4net\" />\n    </configSections>\n    <log4net>\n\n      <appender na" +
            "me=\"RemotingAppender\" type=\"log4net.Appender.RemotingAppender\" >\n        <sink v" +
            "alue=\"tcp://localhost:1983/LoggingSink\" />\n        <lossy value=\"false\" />\n     " +
            "   <bufferSize value=\"1\" />\n        <onlyFixPartialEventData value=\"true\" />\n   " +
            "   </appender>\n\n      <appender name=\"LogFileAppender\" type=\"log4net.Appender.Fi" +
            "leAppender\">\n        <param name=\"File\" value=\"L4N\\L4N.txt\" />\n        <param na" +
            "me=\"AppendToFile\" value=\"true\" />\n        <layout type=\"log4net.Layout.PatternLa" +
            "yout\">\n          <param name=\"Header\" value=\"[Header]\\r\\n\" />\n          <param n" +
            "ame=\"Footer\" value=\"[Footer]\\r\\n\" />\n          <param name=\"ConversionPattern\" v" +
            "alue=\"%d [%t] %-5p %c %m%n\" />\n        </layout>\n      </appender>\n\n      <appen" +
            "der name=\"ConsoleAppender\" type=\"log4net.Appender.ConsoleAppender\" >\n        <la" +
            "yout type=\"log4net.Layout.PatternLayout\">\n          <param name=\"Header\" value=\"" +
            "[Header]\\r\\n\" />\n          <param name=\"Footer\" value=\"[Footer]\\r\\n\" />\n        " +
            "  <param name=\"ConversionPattern\" value=\"%d [%t] %-5p %c %m%n\" />\n        </layo" +
            "ut>\n      </appender>\n\n      <appender name=\"UdpAppender\" type=\"log4net.Appender" +
            ".UdpAppender\">\n        <remoteAddress value=\"localhost\" />\n        <remotePort v" +
            "alue=\"7071\" />\n        <layout type=\"log4net.Layout.XmlLayoutSchemaLog4j\" />\n   " +
            "   </appender>\n\n      <root>\n        <level value=\"Debug\" />\n        <appender-r" +
            "ef ref=\"UdpAppender\" />\n        <appender-ref ref=\"RemotingAppender\" />\n        " +
            "<appender-ref ref=\"LogFileAppender\" />\n      </root>\n    </log4net>\n</configurat" +
            "ion>")]
        public string L4N {
            get {
                return ((string)(this["L4N"]));
            }
            set {
                this["L4N"] = value;
            }
        }
    }
}
